variable "region" {
	description = "Variable for region"
	default = "eu-north-1"
}
terraform {
	required_provider {
		aws = {
			source = "hashicorp/aws"
			version = "5.54.1"

		}
		random = {
			source = "hashicorp/aws"
			version = "3.6.2"
		}
	}
}
provider "aws" {
	region = var.region
}
resource "random_id" "rand_id" {
	byte_length = 8
}
resource "aws_s3_bucket" "demo_bucket" {
	bucket = "demo-bucket-${random_id.rand_id.hex}"     
}
resource "aws_s3_object" "Inster_html" {
	bucket = aws_s3_bucket.demo_bucket      
	source = "./index.html"
	key = "index.html" 
	content_type = "text/html"   
}
resource "aws_s3_object" "Inster_css" {
	bucket = aws_s3_bucket.demo_bucket      
	source = "./index.css"
	key = "index.css"
	content_type = "text/css"    
}
resource "aws_s3_bucket_public_access_block" "public_access_block" {          #<---# Aws s3 bucket policy access
  bucket = aws_s3_bucket.demo_bucket.bucket

  block_public_acls   = false
  block_public_policy = false
  ignore_public_acls  = false
  restrict_public_buckets = false
}
resource "aws_s3_bucket_policy" "bucket_policy" {                           #<-------# Add Bucket Policy
	bucket = aws_s3_bucket.demo_bucket.bucket
	policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Sid       = "PublicReadGetObject"
        Effect    = "Allow"
        Principal = "*"
        Action    = "s3:GetObject"
        Resource  = [
          "arn:aws:s3:::${aws_s3_bucket.demo_bucket.bucket}/*"
        ]
      }
    ]
  })
}
resource "aws_s3_bucket_website_configuration" "web_config" {
	bucket = aws_s3_bucket.demo_bucket.bucket
	index_document {
		suffix = "index.html"
	}
}

output "web_site_url" {
	value  = aws_s3_bucket_website_configuration.web_congig.website_endpoint
}
